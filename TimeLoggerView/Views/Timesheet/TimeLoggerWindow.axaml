<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="https://github.com/projektanker/icons.avalonia"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="TimeLoggerView.Views.Timesheet.TimeLoggerWindow"
        xmlns:vm="clr-namespace:TimeLoggerView.ViewModels"
        xmlns:suki="clr-namespace:SukiUI.Controls;assembly=SukiUI"
        xmlns:models="clr-namespace:SukiUI.Models;assembly=SukiUI"
        xmlns:objectModel="clr-namespace:System.Collections.ObjectModel;assembly=System"
        xmlns:theme="clr-namespace:SukiUI.Theme;assembly=SukiUI"
        xmlns:views="using:TimeLoggerView.Views"
        Title="Time Logger" PointerEntered="Window_PointerEntered" PointerExited="Window_PointerExited_1" SizeToContent="WidthAndHeight"
		    Icon="/Assets/icon.ico"
		    Background="Transparent"
		    Topmost="True"
		    ShowInTaskbar="True"
		    Loaded="Window_Loaded"
		    Closed="Window_Closed"
        x:DataType="vm:TimesheetViewModel"
        MinWidth="480"
        MaxHeight="500">
  <Design.DataContext>
    <!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
    <vm:TimesheetViewModel />
  </Design.DataContext>
  <Border CornerRadius="5"  Background="#353535">

    <Grid RowDefinitions="Auto,Auto">
      <!--<TextBlock Grid.Row="0" Text="{Binding ErrorText}" Foreground="{DynamicResource ErrorBrush}" />-->
      <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Visible" MaxHeight="480" IsVisible="{Binding !TimerRunning}">
        <Grid x:Name="MainView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
          <views:TimesheetEditorComponent DataContext="{Binding}"/>
        </Grid>
      </ScrollViewer>

      <Grid IsVisible="{Binding TimerRunning}" x:Name="MiniView" ColumnDefinitions="Auto, *">
        <Border Background="LightGray" Opacity="0.4" PointerPressed="InputElement_OnPointerPressed"
            PointerReleased="InputElement_OnPointerReleased"
            PointerMoved="InputElement_OnPointerMoved" Padding="10">
          <StackPanel IsHitTestVisible="False">

            <Image Margin="0"  Height="16" IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Top">
              <Image.Source>
                <i:IconImage Value="mdi-dots-grid" Brush="Black" />
              </Image.Source>
            </Image>
            <Image Margin="0 -4 0 -4"  Height="16" IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Top">
              <Image.Source>
                <i:IconImage Value="mdi-dots-grid" Brush="Black" />
              </Image.Source>
            </Image>
            <Image Margin="0"  Height="16" IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Top">
              <Image.Source>
                <i:IconImage Value="mdi-dots-grid" Brush="Black" />
              </Image.Source>
            </Image>
          </StackPanel>

        </Border>
        <StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="20 10 20 10">
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <TextBlock Text="ERF-"/>
            <TextBlock Text="{Binding SelectedProject.ERFNumber}"/>
          </StackPanel>
          <TextBlock HorizontalAlignment="Center" FontSize="20" FontWeight="ExtraBold" Text="{Binding TimerString}"/>
          <Button Command="{Binding StopTimerCommand}">Stop</Button>
        </StackPanel>
      </Grid>
    </Grid>
  </Border>

</Window>
